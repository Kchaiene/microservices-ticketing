{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebStormProject\\\\Microservices with Node JS and React\\\\micros-ticketing\\\\client\\\\pages\\\\orders\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { servTicketing } from \"../../api/build-client\";\n\nconst OrdersListPage = ({\n  orders\n}) => {\n  const showOrders = orders => orders.map(order => Boolean(order) && __jsx(\"li\", {\n    key: order.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }\n  }, order.title, \" - \", order.status));\n\n  return __jsx(React.Fragment, null, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Orders List \"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport async function getServerSideProps(ctx) {\n  try {\n    const options = {\n      headers: ctx.req.headers\n    };\n    const {\n      data\n    } = await servTicketing.get(\"/api/orders\", options);\n    return {\n      props: {\n        orders: data\n      }\n    };\n  } catch (e) {\n    console.log(\"Error OrderList ServerSide ==>\", e.message);\n    return {\n      props: {}\n    };\n  }\n}\nexport default OrdersListPage;","map":{"version":3,"sources":["D:/WebStormProject/Microservices with Node JS and React/micros-ticketing/client/pages/orders/index.js"],"names":["React","servTicketing","OrdersListPage","orders","showOrders","map","order","Boolean","id","title","status","getServerSideProps","ctx","options","headers","req","data","get","props","e","console","log","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,wBAA5B;;AAIA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAErC,QAAMC,UAAU,GAAGD,MAAM,IAAIA,MAAM,CAACE,GAAP,CAAWC,KAAK,IAAGC,OAAO,CAACD,KAAD,CAAP,IAChD;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,KADT,SACmBH,KAAK,CAACI,MADzB,CAD6B,CAA7B;;AAKA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAQD,CAfD;;AAiBA,OAAO,eAAeC,kBAAf,CAAkCC,GAAlC,EAAuC;AAC5C,MAAI;AACF,UAAMC,OAAO,GAAG;AAACC,MAAAA,OAAO,EAAEF,GAAG,CAACG,GAAJ,CAAQD;AAAlB,KAAhB;AACA,UAAM;AAACE,MAAAA;AAAD,QAAS,MAAMf,aAAa,CAACgB,GAAd,CAAkB,aAAlB,EAAiCJ,OAAjC,CAArB;AACA,WAAO;AAACK,MAAAA,KAAK,EAAC;AAACf,QAAAA,MAAM,EAAEa;AAAT;AAAP,KAAP;AACD,GAJD,CAIE,OAAOG,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,CAAC,CAACG,OAAhD;AACA,WAAO;AAACJ,MAAAA,KAAK,EAAC;AAAP,KAAP;AACD;AACF;AAGD,eAAehB,cAAf","sourcesContent":["import React from \"react\";\r\nimport {servTicketing} from \"../../api/build-client\";\r\n\r\n\r\n\r\nconst OrdersListPage = ({ orders }) => {\r\n\r\n  const showOrders = orders => orders.map(order=> Boolean(order) &&\r\n  <li key={order.id}>\r\n    {order.title} - {order.status}\r\n    </li> );\r\n\r\n  return (\r\n    <>\r\n      <h2>Orders List </h2>\r\n      <ul>\r\n\r\n      </ul>\r\n    </>\r\n  )\r\n};\r\n\r\nexport async function getServerSideProps(ctx) {\r\n  try {\r\n    const options = {headers: ctx.req.headers };\r\n    const {data} = await servTicketing.get(\"/api/orders\", options);\r\n    return {props:{orders: data}}\r\n  } catch (e) {\r\n    console.log(\"Error OrderList ServerSide ==>\", e.message);\r\n    return {props:{}}\r\n  }\r\n}\r\n\r\n\r\nexport default OrdersListPage;"]},"metadata":{},"sourceType":"module"}