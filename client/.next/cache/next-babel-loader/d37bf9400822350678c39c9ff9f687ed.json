{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { errMsg } from \"../utils/errMsg\";\nimport { consoleErrorClient } from \"../utils/consoleMessage\";\nconst INIT_STATUS = {\n  loading: false,\n  error: \"\",\n  success: \"\"\n};\nexport default function (INIT_DATA = {}, onSubmitCallback, validator, initStatus = INIT_STATUS) {\n  const [formState, setFormState] = React.useState(INIT_DATA);\n  const [status, setStatus] = React.useState(initStatus);\n  const timerIdRef = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timerIdRef.current);\n    };\n  }, []);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.currentTarget;\n\n    if (name === \"image\") {\n      let imagePreview = window.URL.createObjectURL(files[0]);\n      setFormState(state => _objectSpread(_objectSpread({}, state), {}, {\n        image: files[0],\n        imagePreview\n      }));\n    } else {\n      setFormState(state => _objectSpread(_objectSpread({}, state), {}, {\n        [name]: value\n      }));\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus({\n      loading: true,\n      error: \"\",\n      success: \"\"\n    });\n\n    try {\n      await validator(formState);\n      const {\n        success,\n        clear\n      } = (await onSubmitCallback(formState, setFormState)) || {};\n\n      if (success) {\n        setStatus({\n          loading: false,\n          error: \"\",\n          success\n        });\n        clearTimeout(timerIdRef.current);\n        timerIdRef.current = setTimeout(() => setStatus(state => _objectSpread(_objectSpread({}, state), {}, {\n          success: \"\"\n        })), 2000);\n      }\n\n      if (clear) {\n        setFormState(INIT_DATA);\n      }\n    } catch (e) {\n      setStatus({\n        loading: false,\n        error: errMsg(e),\n        success: \"\"\n      });\n      consoleErrorClient(e, \"Error useForm handleSubmit\");\n    }\n  };\n\n  return [formState, status, handleChange, handleSubmit, setFormState];\n}","map":{"version":3,"sources":["D:/WebStormProject/Microservices with Node JS and React/micros-ticketing/client/hooks/useForm.js"],"names":["React","errMsg","consoleErrorClient","INIT_STATUS","loading","error","success","INIT_DATA","onSubmitCallback","validator","initStatus","formState","setFormState","useState","status","setStatus","timerIdRef","useRef","useEffect","clearTimeout","current","handleChange","e","name","value","files","currentTarget","imagePreview","window","URL","createObjectURL","state","image","handleSubmit","preventDefault","clear","setTimeout"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SAAQC,kBAAR,QAAiC,yBAAjC;AAIA,MAAMC,WAAW,GAAG;AAACC,EAAAA,OAAO,EAAC,KAAT;AAAgBC,EAAAA,KAAK,EAAC,EAAtB;AAA0BC,EAAAA,OAAO,EAAC;AAAlC,CAApB;AAEA,eAAe,UAAUC,SAAS,GAAC,EAApB,EAAwBC,gBAAxB,EAA0CC,SAA1C,EAAqDC,UAAU,GAACP,WAAhE,EAA8E;AAC3F,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BZ,KAAK,CAACa,QAAN,CAAeN,SAAf,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBf,KAAK,CAACa,QAAN,CAAeH,UAAf,CAA5B;AACA,QAAMM,UAAU,GAAGhB,KAAK,CAACiB,MAAN,CAAa,IAAb,CAAnB;AAGAjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAI;AAClB,WAAO,MAAI;AAACC,MAAAA,YAAY,CAACH,UAAU,CAACI,OAAZ,CAAZ;AAAmC,KAA/C;AACD,GAFD,EAEG,EAFH;;AAKA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA;AAAd,QAAyBH,CAAC,CAACI,aAAjC;;AACA,QAAIH,IAAI,KAAK,OAAb,EAAsB;AACpB,UAAII,YAAY,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BL,KAAK,CAAC,CAAD,CAAhC,CAAnB;AACAb,MAAAA,YAAY,CAAEmB,KAAK,oCAAUA,KAAV;AAAiBC,QAAAA,KAAK,EAACP,KAAK,CAAC,CAAD,CAA5B;AAAiCE,QAAAA;AAAjC,QAAP,CAAZ;AACD,KAHD,MAGO;AACLf,MAAAA,YAAY,CAAEmB,KAAK,oCAAUA,KAAV;AAAiB,SAACR,IAAD,GAAOC;AAAxB,QAAP,CAAZ;AACD;AACF,GARD;;AAUA,QAAMS,YAAY,GAAG,MAAMX,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACY,cAAF;AACAnB,IAAAA,SAAS,CAAC;AAACX,MAAAA,OAAO,EAAE,IAAV;AAAgBC,MAAAA,KAAK,EAAC,EAAtB;AAA0BC,MAAAA,OAAO,EAAC;AAAlC,KAAD,CAAT;;AACA,QAAI;AACF,YAAMG,SAAS,CAACE,SAAD,CAAf;AAEA,YAAM;AAACL,QAAAA,OAAD;AAAU6B,QAAAA;AAAV,UAAmB,OAAM3B,gBAAgB,CAACG,SAAD,EAAYC,YAAZ,CAAtB,KAAmD,EAA5E;;AACA,UAAIN,OAAJ,EAAa;AACXS,QAAAA,SAAS,CAAC;AAACX,UAAAA,OAAO,EAAE,KAAV;AAAiBC,UAAAA,KAAK,EAAC,EAAvB;AAA2BC,UAAAA;AAA3B,SAAD,CAAT;AACAa,QAAAA,YAAY,CAACH,UAAU,CAACI,OAAZ,CAAZ;AACAJ,QAAAA,UAAU,CAACI,OAAX,GAAqBgB,UAAU,CAAC,MAAIrB,SAAS,CAACgB,KAAK,oCAAOA,KAAP;AAAczB,UAAAA,OAAO,EAAC;AAAtB,UAAN,CAAd,EAAmD,IAAnD,CAA/B;AACD;;AACD,UAAI6B,KAAJ,EAAW;AAACvB,QAAAA,YAAY,CAACL,SAAD,CAAZ;AAA0B;AACvC,KAVD,CAUE,OAAOe,CAAP,EAAU;AACVP,MAAAA,SAAS,CAAC;AAACX,QAAAA,OAAO,EAAE,KAAV;AAAiBC,QAAAA,KAAK,EAAEJ,MAAM,CAACqB,CAAD,CAA9B;AAAmChB,QAAAA,OAAO,EAAC;AAA3C,OAAD,CAAT;AACAJ,MAAAA,kBAAkB,CAACoB,CAAD,EAAI,4BAAJ,CAAlB;AACD;AACF,GAjBD;;AAqBA,SAAO,CAACX,SAAD,EAAYG,MAAZ,EAAoBO,YAApB,EAAkCY,YAAlC,EAAgDrB,YAAhD,CAAP;AACD","sourcesContent":["import React from \"react\";\r\nimport {errMsg} from \"../utils/errMsg\";\r\nimport {consoleErrorClient} from \"../utils/consoleMessage\";\r\n\r\n\r\n\r\nconst INIT_STATUS = {loading:false, error:\"\", success:\"\", };\r\n\r\nexport default function (INIT_DATA={}, onSubmitCallback, validator, initStatus=INIT_STATUS, ){\r\n  const [formState, setFormState] = React.useState(INIT_DATA);\r\n  const [status, setStatus] = React.useState(initStatus);\r\n  const timerIdRef = React.useRef(null);\r\n\r\n\r\n  React.useEffect(()=>{\r\n    return ()=>{clearTimeout(timerIdRef.current); }\r\n  }, []);\r\n\r\n\r\n  const handleChange = e => {\r\n    const {name, value, files, } = e.currentTarget;\r\n    if (name === \"image\") {\r\n      let imagePreview = window.URL.createObjectURL(files[0]);\r\n      setFormState( state => ({ ...state, image:files[0], imagePreview }) );\r\n    } else {\r\n      setFormState( state => ({ ...state, [name]:value }) );\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setStatus({loading: true, error:\"\", success:\"\", });\r\n    try {\r\n      await validator(formState);\r\n\r\n      const {success, clear} = await onSubmitCallback(formState, setFormState) || {};\r\n      if (success) {\r\n        setStatus({loading: false, error:\"\", success, });\r\n        clearTimeout(timerIdRef.current);\r\n        timerIdRef.current = setTimeout(()=>setStatus(state=>({...state, success:\"\",}) ), 2000);\r\n      }\r\n      if (clear) {setFormState(INIT_DATA); }\r\n    } catch (e) {\r\n      setStatus({loading: false, error: errMsg(e), success:\"\", });\r\n      consoleErrorClient(e, \"Error useForm handleSubmit\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return [formState, status, handleChange, handleSubmit, setFormState ]\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}