{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebStormProject\\\\Microservices with Node JS and React\\\\micros-ticketing\\\\client\\\\pages\\\\tickets\\\\new.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport useForm from \"../../hooks/useForm\";\nimport axios from \"axios\";\nimport { consoleLogClient } from \"../../utils/consoleMessage\";\nconst INIT_STATE = {\n  title: \"\",\n  price: \"\"\n};\n\nconst CreateTicketPage = () => {\n  const [formState, status, handleChange, handleSubmit, setState] = useForm(INIT_STATE, onSubmit, validator);\n  const {\n    title,\n    price\n  } = formState;\n  const {\n    loading,\n    error\n  } = status;\n  consoleLogClient(\"CreateTicketPage Render\", formState);\n\n  const handleBlur = e => {\n    console.log(\"ON BLUR\");\n    const value = parseFloat(price);\n\n    if (isNaN(value)) {\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, formState), {}, {\n      value: value.toFixed(2)\n    }));\n  };\n\n  async function validator(state) {}\n\n  async function onSubmit(state) {\n    const {\n      title,\n      price\n    } = state;\n    await axios.post(\"/api/tickets\", {\n      title,\n      price\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Create New Ticket\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Title\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: title,\n    className: \"form-control\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Price\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"price\",\n    value: price,\n    className: \"form-control\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Submit\")), error && __jsx(\"div\", {\n    className: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 18\n    }\n  }, error));\n};\n\nexport default CreateTicketPage;","map":{"version":3,"sources":["D:/WebStormProject/Microservices with Node JS and React/micros-ticketing/client/pages/tickets/new.js"],"names":["React","useForm","axios","consoleLogClient","INIT_STATE","title","price","CreateTicketPage","formState","status","handleChange","handleSubmit","setState","onSubmit","validator","loading","error","handleBlur","e","console","log","value","parseFloat","isNaN","toFixed","state","post"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport useForm from \"../../hooks/useForm\";\r\nimport axios from \"axios\";\r\nimport {consoleLogClient} from \"../../utils/consoleMessage\";\r\n\r\n\r\n\r\nconst INIT_STATE = {title:\"\", price:\"\"};\r\n\r\nconst CreateTicketPage = () => {\r\n  const [formState, status, handleChange, handleSubmit, setState] = useForm(INIT_STATE, onSubmit, validator );\r\n  const {title, price} = formState;\r\n  const {loading, error} = status;\r\n  consoleLogClient(\"CreateTicketPage Render\", formState);\r\n\r\n\r\n  const handleBlur = (e) => {\r\n    console.log(\"ON BLUR\");\r\n    const value = parseFloat(price);\r\n    if (isNaN(value)) {return; }\r\n    setState({...formState, value:value.toFixed(2)});\r\n  };\r\n\r\n  async function validator (state) {}\r\n\r\n  async function onSubmit (state) {\r\n    const {title, price} = state;\r\n    await axios.post(\"/api/tickets\", {title, price});\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Create New Ticket</h1>\r\n\r\n      <form onSubmit={handleSubmit} className=\"container\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\">Title</label>\r\n          <input type=\"text\" name=\"title\" value={title}\r\n                 className=\"form-control\"\r\n                 onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\">Price</label>\r\n          <input type=\"text\" name=\"price\" value={price}\r\n                 className=\"form-control\"\r\n                 onChange={handleChange}\r\n                 onBlur={handleBlur}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </form>\r\n\r\n      {error && (<div className=\"alert\">{error}</div>) }\r\n    </>\r\n  )\r\n};\r\n\r\n\r\nexport default CreateTicketPage;"]},"metadata":{},"sourceType":"module"}