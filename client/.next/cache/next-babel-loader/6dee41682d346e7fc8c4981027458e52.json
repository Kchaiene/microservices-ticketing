{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebStormProject\\\\Microservices with Node JS and React\\\\micros-ticketing\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { UserContext } from \"../react-context/user-context\";\nimport { servTicketing } from \"../api/build-client\";\nimport { consoleLogClient } from \"../utils/consoleMessage\";\n\nconst Home = () => {\n  const {\n    currentUser\n  } = React.useContext(UserContext);\n  const {\n    email\n  } = currentUser || {}; // console.log(\"Home Render\", currentUser );\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Home\"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, email ? \"Your are signed in\" : \"You are NOT signed in\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Email: \", email));\n};\n\nexport async function getServerSideProps(ctx, currentUser) {\n  consoleLogClient(\"Home ServerProps\", currentUser);\n\n  try {\n    const options = {\n      headers: ctx.req.headers\n    }; // const {data} = await servTicketing.get(\"/api/users/currentuser\", options);\n    // return {props:{currentUser: data}}\n\n    return {\n      props: {}\n    };\n  } catch (e) {\n    console.log(\"Error Home ServerSide ==>\", e.message);\n    return {\n      props: {}\n    };\n  }\n}\nexport default Home;","map":{"version":3,"sources":["D:/WebStormProject/Microservices with Node JS and React/micros-ticketing/client/pages/index.js"],"names":["React","UserContext","servTicketing","consoleLogClient","Home","currentUser","useContext","email","getServerSideProps","ctx","options","headers","req","props","e","console","log","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,+BAA1B;AACA,SAAQC,aAAR,QAA4B,qBAA5B;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;;AAIA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM;AAACC,IAAAA;AAAD,MAAgBL,KAAK,CAACM,UAAN,CAAiBL,WAAjB,CAAtB;AACA,QAAM;AAACM,IAAAA;AAAD,MAAUF,WAAW,IAAI,EAA/B,CAFiB,CAGjB;;AAEA,SACE,4BACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,KAAK,GAAG,oBAAH,GAA0B,uBAApC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAX,CAHF,CADF;AAOD,CAZD;;AAeA,OAAO,eAAeC,kBAAf,CAAkCC,GAAlC,EAAuCJ,WAAvC,EAAoD;AACzDF,EAAAA,gBAAgB,CAAC,kBAAD,EAAqBE,WAArB,CAAhB;;AACA,MAAI;AACF,UAAMK,OAAO,GAAG;AAACC,MAAAA,OAAO,EAAEF,GAAG,CAACG,GAAJ,CAAQD;AAAlB,KAAhB,CADE,CAEF;AACA;;AACA,WAAO;AAACE,MAAAA,KAAK,EAAC;AAAP,KAAP;AACD,GALD,CAKE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,CAAC,CAACG,OAA3C;AACA,WAAO;AAACJ,MAAAA,KAAK,EAAC;AAAP,KAAP;AACD;AACF;AAGD,eAAeT,IAAf","sourcesContent":["import React from \"react\";\r\nimport {UserContext} from \"../react-context/user-context\";\r\nimport {servTicketing} from \"../api/build-client\";\r\nimport {consoleLogClient} from \"../utils/consoleMessage\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n  const {currentUser} = React.useContext(UserContext);\r\n  const {email} = currentUser || {};\r\n  // console.log(\"Home Render\", currentUser );\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center\">Home</h1>\r\n      <h2>{email ? \"Your are signed in\" : \"You are NOT signed in\"}</h2>\r\n      <p>Email: {email}</p>\r\n    </>\r\n  )\r\n};\r\n\r\n\r\nexport async function getServerSideProps(ctx, currentUser) {\r\n  consoleLogClient(\"Home ServerProps\", currentUser);\r\n  try {\r\n    const options = {headers: ctx.req.headers };\r\n    // const {data} = await servTicketing.get(\"/api/users/currentuser\", options);\r\n    // return {props:{currentUser: data}}\r\n    return {props:{}}\r\n  } catch (e) {\r\n    console.log(\"Error Home ServerSide ==>\", e.message);\r\n    return {props:{}}\r\n  }\r\n}\r\n\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}