{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\WebStormProject\\\\Microservices with Node JS and React\\\\micros-ticketing\\\\client\\\\pages\\\\tickets\\\\new.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport useForm from \"../../hooks/useForm\";\nimport axios from \"axios\";\nimport { consoleLogClient } from \"../../utils/consoleMessage\";\nvar INIT_STATE = {\n  title: \"\",\n  price: \"\"\n};\n\nvar CreateTicketPage = function CreateTicketPage() {\n  _s();\n\n  var _useForm = useForm(INIT_STATE, onSubmit, validator),\n      _useForm2 = _slicedToArray(_useForm, 5),\n      formState = _useForm2[0],\n      status = _useForm2[1],\n      handleChange = _useForm2[2],\n      handleSubmit = _useForm2[3],\n      setState = _useForm2[4];\n\n  var title = formState.title,\n      price = formState.price;\n  var loading = status.loading,\n      error = status.error,\n      success = status.success; // consoleLogClient(\"CreateTicketPage Render\", success);\n\n  var handleBlur = function handleBlur(e) {\n    var value = parseFloat(price);\n\n    if (isNaN(value)) {\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, formState), {}, {\n      price: value.toFixed(2)\n    }));\n  };\n\n  function validator(_x) {\n    return _validator.apply(this, arguments);\n  }\n\n  function _validator() {\n    _validator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(state) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _validator.apply(this, arguments);\n  }\n\n  function onSubmit(_x2) {\n    return _onSubmit.apply(this, arguments);\n  }\n\n  function _onSubmit() {\n    _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(state) {\n      var title, price;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              title = state.title, price = state.price;\n              _context2.next = 3;\n              return axios.post(\"/api/tickets\", {\n                title: title,\n                price: price\n              });\n\n            case 3:\n              return _context2.abrupt(\"return\", {\n                success: \"Success\",\n                clear: true\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _onSubmit.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Create New Ticket\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Title\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: title,\n    className: \"form-control\",\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Price\"), __jsx(\"input\", {\n    type: \"number\",\n    name: \"price\",\n    value: price,\n    className: \"form-control\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Submit\")), error && __jsx(\"div\", {\n    className: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 18\n    }\n  }, error), success && __jsx(\"div\", {\n    className: \"alert\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }\n  }, success));\n};\n\n_s(CreateTicketPage, \"+FVXQE0zXeOGdJ02nlRAt+pE51o=\", false, function () {\n  return [useForm];\n});\n\n_c = CreateTicketPage;\nexport default CreateTicketPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTicketPage\");","map":{"version":3,"sources":["D:/WebStormProject/Microservices with Node JS and React/micros-ticketing/client/pages/tickets/new.js"],"names":["React","useForm","axios","consoleLogClient","INIT_STATE","title","price","CreateTicketPage","onSubmit","validator","formState","status","handleChange","handleSubmit","setState","loading","error","success","handleBlur","e","value","parseFloat","isNaN","toFixed","state","post","clear"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport useForm from \"../../hooks/useForm\";\r\nimport axios from \"axios\";\r\nimport {consoleLogClient} from \"../../utils/consoleMessage\";\r\n\r\n\r\n\r\nconst INIT_STATE = {title:\"\", price:\"\"};\r\n\r\nconst CreateTicketPage = () => {\r\n  const [formState, status, handleChange, handleSubmit, setState] = useForm(INIT_STATE, onSubmit, validator );\r\n  const {title, price} = formState;\r\n  const {loading, error, success} = status;\r\n  // consoleLogClient(\"CreateTicketPage Render\", success);\r\n\r\n\r\n  const handleBlur = (e) => {\r\n    const value = parseFloat(price);\r\n    if (isNaN(value)) {return; }\r\n    setState({...formState, price:value.toFixed(2)});\r\n  };\r\n\r\n  async function validator (state) {}\r\n\r\n  async function onSubmit (state) {\r\n    const {title, price} = state;\r\n    await axios.post(\"/api/tickets\", {title, price});\r\n    return {success:\"Success\", clear:true};\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Create New Ticket</h1>\r\n\r\n      <form onSubmit={handleSubmit} className=\"container\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\">Title</label>\r\n          <input type=\"text\" name=\"title\" value={title}\r\n                 className=\"form-control\"\r\n                 onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"\">Price</label>\r\n          <input type=\"number\" name=\"price\" value={price}\r\n                 className=\"form-control\"\r\n                 onChange={handleChange}\r\n                 onBlur={handleBlur}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </form>\r\n\r\n      {error && (<div className=\"alert\">{error}</div>) }\r\n      {success && (<div className=\"alert\">{success}</div>) }\r\n    </>\r\n  )\r\n};\r\n\r\n\r\nexport default CreateTicketPage;"]},"metadata":{},"sourceType":"module"}