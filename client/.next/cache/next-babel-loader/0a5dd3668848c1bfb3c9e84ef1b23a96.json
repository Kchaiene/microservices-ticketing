{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { errMsg } from \"../utils/errMsg\";\nimport { consoleErrorClient } from \"../utils/consoleMessage\";\nvar INIT_STATUS = {\n  loading: false,\n  error: \"\",\n  success: \"\"\n};\nexport default function useForm() {\n  _s();\n\n  var INIT_DATA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var onSubmitCallback = arguments.length > 1 ? arguments[1] : undefined;\n  var validator = arguments.length > 2 ? arguments[2] : undefined;\n  var initStatus = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INIT_STATUS;\n\n  var _React$useState = React.useState(INIT_DATA),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      formState = _React$useState2[0],\n      setFormState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(initStatus),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      status = _React$useState4[0],\n      setStatus = _React$useState4[1];\n\n  var timerIdRef = React.useRef(null);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timerIdRef.current);\n    };\n  }, []);\n\n  var handleChange = function handleChange(e) {\n    var _e$currentTarget = e.currentTarget,\n        name = _e$currentTarget.name,\n        value = _e$currentTarget.value,\n        files = _e$currentTarget.files;\n\n    if (name === \"image\") {\n      var imagePreview = window.URL.createObjectURL(files[0]);\n      setFormState(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          image: files[0],\n          imagePreview: imagePreview\n        });\n      });\n    } else {\n      setFormState(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, value));\n      });\n    }\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _ref2, success, clear;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setStatus({\n                loading: true,\n                error: \"\",\n                success: \"\"\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return validator(formState);\n\n            case 5:\n              _context.next = 7;\n              return onSubmitCallback(formState, setFormState);\n\n            case 7:\n              _context.t0 = _context.sent;\n\n              if (_context.t0) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.t0 = {};\n\n            case 10:\n              _ref2 = _context.t0;\n              success = _ref2.success;\n              clear = _ref2.clear;\n\n              if (success) {\n                setStatus({\n                  loading: false,\n                  error: \"\",\n                  success: success\n                });\n                clearTimeout(timerIdRef.current);\n                timerIdRef.current = setTimeout(function () {\n                  return setStatus(function (state) {\n                    return _objectSpread(_objectSpread({}, state), {}, {\n                      success: \"\"\n                    });\n                  });\n                }, 2000);\n              }\n\n              if (clear) {\n                setFormState(INIT_DATA);\n              }\n\n              _context.next = 21;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t1 = _context[\"catch\"](2);\n              setStatus({\n                loading: false,\n                error: errMsg(_context.t1),\n                success: \"\"\n              });\n              consoleErrorClient(_context.t1, \"Error useForm handleSubmit\");\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 17]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return [formState, status, handleChange, handleSubmit, setFormState];\n}\n\n_s(useForm, \"bF5xSxtCe8q8SeV2RAOSkO4qX/c=\");","map":{"version":3,"sources":["D:/WebStormProject/Microservices with Node JS and React/micros-ticketing/client/hooks/useForm.js"],"names":["React","errMsg","consoleErrorClient","INIT_STATUS","loading","error","success","useForm","INIT_DATA","onSubmitCallback","validator","initStatus","useState","formState","setFormState","status","setStatus","timerIdRef","useRef","useEffect","clearTimeout","current","handleChange","e","currentTarget","name","value","files","imagePreview","window","URL","createObjectURL","state","image","handleSubmit","preventDefault","clear","setTimeout"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {errMsg} from \"../utils/errMsg\";\r\nimport {consoleErrorClient} from \"../utils/consoleMessage\";\r\n\r\n\r\n\r\nconst INIT_STATUS = {loading:false, error:\"\", success:\"\", };\r\n\r\nexport default function useForm (INIT_DATA={}, onSubmitCallback, validator, initStatus=INIT_STATUS, ){\r\n  const [formState, setFormState] = React.useState(INIT_DATA);\r\n  const [status, setStatus] = React.useState(initStatus);\r\n  const timerIdRef = React.useRef(null);\r\n\r\n\r\n  React.useEffect(()=>{\r\n    return ()=>{clearTimeout(timerIdRef.current); }\r\n  }, []);\r\n\r\n\r\n  const handleChange = e => {\r\n    const {name, value, files, } = e.currentTarget;\r\n    if (name === \"image\") {\r\n      let imagePreview = window.URL.createObjectURL(files[0]);\r\n      setFormState( state => ({ ...state, image:files[0], imagePreview }) );\r\n    } else {\r\n      setFormState( state => ({ ...state, [name]:value }) );\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setStatus({loading: true, error:\"\", success:\"\", });\r\n    try {\r\n      await validator(formState);\r\n\r\n      const {success, clear} = await onSubmitCallback(formState, setFormState) || {};\r\n      if (success) {\r\n        setStatus({loading: false, error:\"\", success, });\r\n        clearTimeout(timerIdRef.current);\r\n        timerIdRef.current = setTimeout(()=>setStatus(state=>({...state, success:\"\",}) ), 2000);\r\n      }\r\n      if (clear) {setFormState(INIT_DATA); }\r\n    } catch (e) {\r\n      setStatus({loading: false, error: errMsg(e), success:\"\", });\r\n      consoleErrorClient(e, \"Error useForm handleSubmit\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return [formState, status, handleChange, handleSubmit, setFormState ]\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}